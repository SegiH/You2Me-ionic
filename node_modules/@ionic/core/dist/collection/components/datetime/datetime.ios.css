:host {
  /**
   * @prop --background: The primary background of the datetime component.
   * @prop --background-rgb: The primary background of the datetime component in RGB format.
   * @prop --title-color: The text color of the title.
   */
  display: flex;
  flex-flow: column;
  background: var(--background);
  overflow: hidden;
}

:host(.datetime-presentation-date-time),
:host(.datetime-presentation-time-date),
:host(.datetime-presentation-date) {
  height: 100%;
}

:host(.datetime-size-fixed) {
  width: 350px;
}

:host(.datetime-size-cover) {
  width: 100%;
  min-width: 350px;
}

:host .calendar-body,
:host .time-column,
:host .datetime-year {
  opacity: 0;
}

:host(:not(.datetime-ready)) .datetime-year {
  position: absolute;
  pointer-events: none;
}

:host(.datetime-ready) .calendar-body,
:host(.datetime-ready) .time-column {
  opacity: 1;
}

:host(.datetime-ready) .datetime-year {
  display: none;
  opacity: 1;
}

/**
 * This allows the calendar to take
 * up 100% of the remaining height.
 * On iOS, if there are more than
 * 5 rows of dates, the dates should
 * be resized to fit into this
 * container.
 */
:host .datetime-calendar,
:host .datetime-year {
  display: flex;
  flex: 1 1 auto;
  flex-flow: column;
}

:host(.show-month-and-year) .datetime-year {
  display: flex;
}

:host(.show-month-and-year) .calendar-next-prev,
:host(.show-month-and-year) .calendar-days-of-week,
:host(.show-month-and-year) .calendar-body,
:host(.show-month-and-year) .datetime-time {
  display: none;
}

:host(.datetime-readonly),
:host(.datetime-disabled) {
  pointer-events: none;
}

:host(.datetime-disabled) {
  opacity: 0.4;
}

/**
 * Title should not wrap
 * to the next line and should
 * show ellipsis instead.
 */
:host .datetime-header .datetime-title {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

:host .datetime-action-buttons.has-clear-button {
  width: 100%;
}

:host .datetime-action-buttons ion-buttons {
  display: flex;
  justify-content: space-between;
}

/**
 * Date/Year button should be on
 * the opposite side of the component
 * as the Next/Prev buttons
 */
:host .calendar-action-buttons {
  display: flex;
  justify-content: space-between;
}

:host .calendar-action-buttons ion-item,
:host .calendar-action-buttons ion-button {
  --background: translucent;
}

:host .calendar-action-buttons ion-item ion-label {
  display: flex;
  align-items: center;
}

:host .calendar-action-buttons ion-item ion-icon {
  padding-left: 4px;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .calendar-action-buttons ion-item ion-icon {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 4px;
    padding-inline-start: 4px;
    -webkit-padding-end: 0;
    padding-inline-end: 0;
  }
}

:host .calendar-days-of-week {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  text-align: center;
}

:host .calendar-body {
  /**
   * Show all calendar months inline
   * and allow them to take up 100% of
   * the free space. Do not use CSS Grid
   * here as there are issues with nested grid
   * on older browsers.
   */
  display: flex;
  flex-grow: 1;
  scroll-snap-type: x mandatory;
  /**
   * Need to explicitly set overflow-y: hidden
   * for older implementations of scroll snapping.
   */
  overflow-x: scroll;
  overflow-y: hidden;
  scrollbar-width: none;
  /**
   * Hide blue outline on calendar body
   * when it is focused.
   */
  outline: none;
}

:host .calendar-body .calendar-month {
  /**
   * Swiping should snap to at
   * most one month at a time.
   */
  scroll-snap-align: start;
  scroll-snap-stop: always;
  flex-shrink: 0;
  width: 100%;
}

/**
 * Hide scrollbars on Chrome and Safari
 */
:host .calendar-body::-webkit-scrollbar {
  display: none;
}

:host .calendar-body .calendar-month-grid {
  /**
   * Create 7 columns for
   * 7 days in a week.
   */
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  height: 100%;
}

/**
 * Center the day text vertically
 * and horizontally within its grid cell.
 */
:host .calendar-day {
  padding-left: 0px;
  padding-right: 0px;
  padding-top: 0px;
  padding-bottom: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-top: 0px;
  margin-bottom: 0px;
  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;
  border: none;
  outline: none;
  background: none;
  color: currentColor;
  cursor: pointer;
  appearance: none;
  z-index: 0;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .calendar-day {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 0px;
    padding-inline-start: 0px;
    -webkit-padding-end: 0px;
    padding-inline-end: 0px;
  }
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .calendar-day {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 0px;
    margin-inline-start: 0px;
    -webkit-margin-end: 0px;
    margin-inline-end: 0px;
  }
}

:host .calendar-day[disabled] {
  pointer-events: none;
  opacity: 0.4;
}

:host .calendar-day:after {
  border-radius: 32px;
  padding-left: 4px;
  padding-right: 4px;
  padding-top: 4px;
  padding-bottom: 4px;
  /**
   * Explicit position values are required here
   * as pseudo element positioning is incorrect
   * in older implementations of css grid.
   */
  left: 50%;
  top: 50%;
  position: absolute;
  width: 32px;
  height: 32px;
  transform: translate(-50%, -50%);
  content: " ";
  z-index: -1;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .calendar-day:after {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 4px;
    padding-inline-start: 4px;
    -webkit-padding-end: 4px;
    padding-inline-end: 4px;
  }
}
:host-context([dir=rtl]) {
  left: unset;
  right: unset;
  right: 50%;
}

:host .datetime-time {
  display: flex;
  justify-content: space-between;
}

:host .time-base {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid transparent;
  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);
  font-size: 22px;
  font-weight: 400;
  text-align: center;
  overflow-y: hidden;
}

:host .time-base.time-base-active {
  border: 2px solid var(--ion-color-base);
}

:host .time-wrapper {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  height: 100%;
}

:host .time-column {
  position: relative;
  height: 100%;
  outline: none;
  scroll-snap-type: y mandatory;
  overflow-y: scroll;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
}

@media (any-hover: hover) {
  :host .time-column:focus {
    outline: none;
    background: rgba(var(--ion-color-base-rgb), 0.2);
  }
}
:host .time-column.time-column-active {
  background: transparent;
  color: var(--ion-color-base);
}

:host .time-base.time-base-active .time-column:not(.time-column-active),
:host .time-base.time-base-active .time-separator {
  pointer-events: none;
  opacity: 0.4;
}

:host .time-column::-webkit-scrollbar {
  display: none;
}

:host .time-column-hours .time-item {
  text-align: end;
}

:host .time-column-minutes .time-item {
  text-align: start;
}

:host .time-item {
  scroll-snap-align: center;
  height: 100%;
}

:host .time-separator {
  height: 100%;
}

:host .time-header {
  display: flex;
  align-items: center;
}

:host .time-body {
  display: flex;
}

:host .time-ampm {
  width: 100px;
}

:host .time-ampm ion-segment-button {
  min-width: 50px;
}

:host(.in-item) {
  position: static;
}

:host(.show-month-and-year) .calendar-action-buttons ion-item {
  --color: var(--ion-color-base);
}

:host .datetime-year-body .datetime-picker-col {
  margin-left: 10px;
  margin-right: 10px;
  margin-top: 0;
  margin-bottom: 0;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .datetime-year-body .datetime-picker-col {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 10px;
    margin-inline-start: 10px;
    -webkit-margin-end: 10px;
    margin-inline-end: 10px;
  }
}

:host .datetime-picker-before {
  left: 0;
  top: 0;
  position: absolute;
  width: 100%;
  height: 82px;
  background: linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7) 100%);
  z-index: 10;
  pointer-events: none;
}
:host-context([dir=rtl]) {
  left: unset;
  right: unset;
  right: 0;
}

:host .datetime-picker-after {
  left: 0;
  top: 116px;
  position: absolute;
  width: 100%;
  height: 115px;
  background: linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7) 100%);
  z-index: 10;
  pointer-events: none;
}
:host-context([dir=rtl]) {
  left: unset;
  right: unset;
  right: 0;
}

:host .datetime-year-body {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;
  font-size: 22px;
  /**
   * This is required otherwise the
   * highlight will appear behind
   * the datetime.
   */
  z-index: 0;
}

:host .datetime-picker-col {
  scroll-snap-type: y mandatory;
  /**
   * Need to explicitly set overflow-x: hidden
   * for older implementations of scroll snapping.
   */
  overflow-x: hidden;
  overflow-y: scroll;
  scrollbar-width: none;
  height: 200px;
  outline: none;
}

@media (any-hover: hover) {
  :host .datetime-picker-col:focus {
    background: rgba(var(--ion-color-base-rgb), 0.2);
  }
}
/**
 * Hide scrollbars on Chrome and Safari
 */
:host .datetime-picker-col::-webkit-scrollbar {
  display: none;
}

:host .picker-col-item {
  height: 38px;
  line-height: 38px;
  scroll-snap-align: center;
}

:host .picker-col-item-empty {
  scroll-snap-align: none;
}

:host .datetime-year-body .datetime-picker-col:first-of-type {
  text-align: left;
}

:host .datetime-year-body .datetime-picker-col:last-of-type {
  text-align: right;
}

/**
 * Adding :last-of-type is needed here so that
 * we can achieve higher specificity than the
 * previous selectors and avoid using !important.
 */
:host(.datetime-presentation-year) .datetime-picker-col:last-of-type,
:host(.datetime-presentation-month) .datetime-picker-col:last-of-type {
  text-align: center;
}

:host {
  --background: var(--ion-color-light, #ffffff);
  --background-rgb: var(--ion-color-light-rgb);
  --title-color: var(--ion-color-step-600, #666666);
}

:host(.datetime-presentation-date-time),
:host(.datetime-presentation-time-date),
:host(.datetime-presentation-date) {
  min-height: 300px;
}

:host .datetime-header {
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 16px;
  padding-bottom: 16px;
  border-bottom: 0.55px solid var(--ion-color-step-200, #cccccc);
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .datetime-header {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 16px;
    padding-inline-start: 16px;
    -webkit-padding-end: 16px;
    padding-inline-end: 16px;
  }
}

:host .datetime-header .datetime-title {
  color: var(--title-color);
  font-size: 14px;
}

:host .calendar-action-buttons ion-item {
  --padding-start: 16px;
  --background-hover: transparent;
  --background-activated: transparent;
  font-size: 16px;
  font-weight: 600;
}

:host .calendar-action-buttons ion-item ion-icon,
:host .calendar-action-buttons ion-buttons ion-button {
  color: var(--ion-color-base);
}

:host .calendar-action-buttons ion-buttons {
  padding-left: 0;
  padding-right: 0;
  padding-top: 8px;
  padding-bottom: 0;
}

:host .calendar-action-buttons ion-buttons ion-button {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
}

:host .calendar-days-of-week {
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 0;
  padding-bottom: 0;
  color: var(--ion-color-step-300, #b3b3b3);
  font-size: 12px;
  font-weight: 600;
  line-height: 24px;
  text-transform: uppercase;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .calendar-days-of-week {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 8px;
    padding-inline-start: 8px;
    -webkit-padding-end: 8px;
    padding-inline-end: 8px;
  }
}

:host .calendar-body .calendar-month .calendar-month-grid {
  /**
   * We need to apply the padding to
   * each month grid item otherwise
   * older versions of WebKit will consider
   * this padding a snapping point if applied
   * on .calendar-month
   */
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 8px;
  padding-bottom: 8px;
  height: calc(100% - 16px);
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .calendar-body .calendar-month .calendar-month-grid {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 8px;
    padding-inline-start: 8px;
    -webkit-padding-end: 8px;
    padding-inline-end: 8px;
  }
}

:host .calendar-day {
  font-size: 20px;
}

:host .calendar-day:after {
  opacity: 0.2;
}

:host .calendar-day:focus:after {
  background: var(--ion-color-base);
}

/**
 * Day that today but not selected
 * should have ion-color for text color.
 */
:host .calendar-day.calendar-day-today {
  color: var(--ion-color-base);
}

/**
 * Day that is not today but
 * is selected should have ion-color for
 * text color and be bolder.
 */
:host .calendar-day.calendar-day-active {
  color: var(--ion-color-base);
  font-weight: 600;
}

:host .calendar-day.calendar-day-active:after {
  background: var(--ion-color-base);
}

/**
 * Day that is selected and is today
 * should have white color.
 */
:host .calendar-day.calendar-day-today.calendar-day-active {
  color: var(--ion-color-contrast);
}

:host .calendar-day.calendar-day-today.calendar-day-active:after {
  background: var(--ion-color-base);
  opacity: 1;
}

:host .datetime-time {
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 8px;
  padding-bottom: 16px;
  font-size: 16px;
  font-weight: 600;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .datetime-time {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 16px;
    padding-inline-start: 16px;
    -webkit-padding-end: 16px;
    padding-inline-end: 16px;
  }
}

:host .time-base {
  border-radius: 8px;
  margin-left: 0;
  margin-right: 8px;
  margin-top: 0;
  margin-bottom: 0;
  width: 68px;
  height: 28px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .time-base {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 0;
    margin-inline-start: 0;
    -webkit-margin-end: 8px;
    margin-inline-end: 8px;
  }
}

:host .time-column {
  border-radius: 8px;
}

:host .time-item {
  line-height: 28px;
}

:host .datetime-year-body .datetime-picker-col {
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 0;
  padding-bottom: 0;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .datetime-year-body .datetime-picker-col {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 16px;
    padding-inline-start: 16px;
    -webkit-padding-end: 16px;
    padding-inline-end: 16px;
  }
}

:host .datetime-picker-before {
  background: linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);
}

:host .datetime-picker-after {
  background: linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);
}

:host .datetime-picker-highlight {
  border-radius: 8px;
  left: 0;
  right: 0;
  top: 50%;
  bottom: 0;
  margin-left: auto;
  margin-right: auto;
  margin-top: 0;
  margin-bottom: 0;
  position: absolute;
  width: calc(100% - 32px);
  height: 34px;
  transform: translateY(-50%);
  background: var(--ion-color-step-150, #eeeeef);
  z-index: -1;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .datetime-picker-highlight {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: auto;
    margin-inline-start: auto;
    -webkit-margin-end: auto;
    margin-inline-end: auto;
  }
}

:host .datetime-buttons {
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 8px;
  padding-bottom: 8px;
  border-top: 0.55px solid var(--ion-color-step-200, #cccccc);
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host .datetime-buttons {
    padding-left: unset;
    padding-right: unset;
    -webkit-padding-start: 8px;
    padding-inline-start: 8px;
    -webkit-padding-end: 8px;
    padding-inline-end: 8px;
  }
}

:host .datetime-buttons ::slotted(ion-buttons),
:host .datetime-buttons ion-buttons {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

:host .datetime-action-buttons {
  width: 100%;
}