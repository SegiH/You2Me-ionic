{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA6H;AACS;AACzE;AACG;AACqB;AACL;AACwE;AACzF;AACwD;AAC3E;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kBAAkB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB,GAAG,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,yBAAyB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,KAAK,KAAK;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,eAAe,sCAAsC;AACrD;AACA,iBAAiB,aAAa;AAC9B;AACA,OAAO,6BAA6B;AACpgEAAgE;AACrE;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe,KAAK,KAAK;AACxD,2DAA2D,gBAAgB;AAC3E,mBAAmB,2CAA2C;AAC9D,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC,+BAA+B,EAAE,KAAK,KAAK;AAC3C,2DAA2D,gBAAgB;AAC3E,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe,GAAG,aAAa,GAAG,cAAc;AAC3E,uDAAuD,iDAAiD;AACxG;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe,GAAG,aAAa,GAAG,cAAc;AAC3E,0CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe,GAAG,aAAa,GAAG,cAAc;AAC3E,0CAA0C,iCAAiC;AAC3E;;AAEA,8BAA8B,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,uBAAuB,EAAE,SAAS,EAAE;AACnJ,2BAA2B,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,uBAAuB,EAAE,SAAS,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxoBAAoB,aAAa,qBAAqB,iBAAiB,6BAA6B,gBAAgB,mHAAmH,YAAY,4BAA4B,YAAY,4BAA4B,WAAW,gBAAgB,6DAA6D,UAAU,4CAA4C,kBAAkB,oBAAoB,0EAA0E,UAAU,sCAAsC,aAAa,UAAU,8CAA8C,oBAAoB,aAAa,kBAAkB,cAAc,qBAAqB,iBAA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,qBAAqB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA,mBAAmB,4DAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,qDAAS;AACnB,mBAAmB,mBAAmB;AACtC,+DAA+D,uBAAuB,wBAAwB;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qFAAqF;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,aAAa,kCAAkC;AAC/C,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA,iIAAiI,KAAK;AACtI;AACA;AACA;AACA;AACA,qIAAqI,MAAM;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA,iEAAiE,uBAAuB,eAAe;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sBAAsB,eAAe;AACvG;AACA;AACA;AACA,iEAAiE,uBAAuB,cAAc;AACtG;AACA,kEAAkE,sBAAsB,cAAc;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAG;AACf,qBAAqB,yCAAyC;AAC9D,yIAAyI,aAAa;AACtJ,qIAAqI,YAAY;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uDAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,aAAa,0CAA0C;AACvD;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,MAAM,uDAAG;AACT,gFAAgF,KAAK;AACrF;AACA;AACA;AACA,oFAAoF,OAAO;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uDAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,uBAAuB,cAAc;AACxG,kEAAkE,sBAAsB,cAAc;AACtG;AACA;AACA,mEAAmE,uBAAuB,gBAAgB;AAC1G,kEAAkE,sBAAsB,gBAAgB;AACxG;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,aAAa,2CAA2C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6EAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA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AClC,sBAAsB,qDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAQ;AACtC;AACA;AACA;AACA,UAAU,wDAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAc;AAClB;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAO;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAW;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,iBAAiB,4DAAU;AAC3B,YAAY,qDAAC,CAAC,iDAAI,iBAAiB,uCAAuC,mBAAmB;AAC7F,mBAAmB,0BAA0B;AAC7C,OAAO,wBAAwB;AAC/B;AACA,mBAAmB,KAAK,UAAU,EAAE,qDAAW,4GAA4G,GAAG,qDAAC,kBAAkB,6DAA6D,GAAG,qDAAC,SAAS,gBAAgB,GAAG,qDAAC,SAAS,8DAA8D,EAAE,qDAAC,SAAS,0BAA0B,yBAAyB,qDAAC,SAAS,+BAA+B,EAAE,qDAAC,YAAY,4EAA4E,eAAe,qDAAC,SAAS,0BAA0B,EAAE,qDAAC,SAAS,kCAAkC,2CAA2C,qDAAC,uBAAuB,SAAS,IAAI,qDAAC,SAAS,kCAAkC,KAAK,qDAAC,SAAS,gBAAgB;AACrxB;AACA,YAAY,QAAQ,qDAAU,OAAO;AACrC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA,wBAAwB,iDAAiD,EAAE,qDAAW;AACtF;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,oBAAoB,aAAa,kBAAkB,WAAW,OAAO,qBAAqB,uBAAuB,YAAY,+BAA+B,uBAAuB,gBAAgB,aAAa,kBAAkB,WAAW,OAAO,eAAe,YAAY,OAAO,MAAM,cAAc,kBAAkB,WAAW,SAAS,kBAAkB,uBAAuB,mBAAmB,eAAe,gBAAgB,sBAAsB,2DAA2D,WAAW,YAAY,QAAQ,gCAAgC,oBAAoB,qBAAqB,UAAU,kBAAkB,oBAAoB,2BAA2B,mBAAmB,kBAAkB,yBAAyB,qCAAqC,aAAa,eAAe,kBAAkB,WAAW,OAAO,eAAe,mBAAmB,eAAe,kBAAkB,WAAW,OAAO,iBAAiB,mBAAmB,YAAY,iBAAiB,kBAAkB,cAAc,iBAAiB,oCAAoC,4BAA4B,+FAA+F,YAAY,mBAAmB,oBAAoB,0BAA0B,yBAAyB,wBAAwB,wBAAwB,2CAA2C,SAAS,oCAAoC,4BAA4B,cAAc,eAAe,iBAAiB,oBAAoB,YAAY,eAAe,gBAAgB,cAAc,iBAAiB,cAAc,eAAe,aAAa,gBAAgB,uCAAuC,+BAA+B,YAAY,oCAAoC,4BAA4B,4CAA4C,oCAAoC,uBAAuB,cAAc,eAAe,iBAAiB,mCAAmC,2BAA2B,oBAAoB,2DAA2D,oDAAoD,4CAA4C;;AAEpsE,uCAAuC,oBAAoB,aAAa,kBAAkB,WAAW,OAAO,qBAAqB,uBAAuB,YAAY,+BAA+B,uBAAuB,gBAAgB,aAAa,kBAAkB,WAAW,OAAO,eAAe,YAAY,OAAO,MAAM,cAAc,kBAAkB,WAAW,SAAS,kBAAkB,uBAAuB,mBAAmB,eAAe,gBAAgB,sBAAsB,2DAA2D,WAAW,YAAY,QAAQ,gCAAgC,oBAAoB,qBAAqB,UAAU,kBAAkB,oBAAoB,2BAA2B,mBAAmB,kBAAkB,yBAAyB,qCAAqC,aAAa,eAAe,kBAAkB,WAAW,OAAO,eAAe,mBAAmB,eAAe,kBAAkB,WAAW,OAAO,iBAAiB,mBAAmB,YAAY,iBAAiB,kBAAkB,cAAc,iBAAiB,oCAAoC,4BAA4B,+FAA+F,YAAY,mBAAmB,oBAAoB,0BAA0B,yBAAyB,wBAAwB,wBAAwB,2CAA2C,SAAS,oCAAoC,4BAA4B,cAAc,eAAe,iBAAiB,oBAAoB,YAAY,cAAc,eAAe,aAAa,gBAAgB,eAAe,gBAAgB,cAAc,iBAAiB,YAAY,4CAA4C,oCAAoC,uBAAuB,cAAc,eAAe,iBAAiB,mCAAmC,2BAA2B,oBAAoB,8DAA8D,wCAAwC;;AAExgE;AACA;AACA,IAAI,qDAAgB;AACpB,8BAA8B,qDAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sHAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,KAAK,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sDAAsB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sDAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAU;AAC3B,YAAY,qDAAC,CAAC,iDAAI,GAAG;AACrB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO,EAAE,iBAAiB,qDAAC,SAAS,iCAAiC,yBAAyB,EAAE,gBAAgB,qDAAC,SAAS,+BAA+B,6BAA6B,+BAA+B,gCAAgC,qDAAC,UAAU,yBAAyB,0DAA0D,sBAAsB,4BAA4B,qDAAC,SAAS,iCAAiC,yBAAyB,EAAE;AAC3c;AACA,YAAY,QAAQ,qDAAU,OAAO;AACrC,yBAAyB;AACzB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEgG","file":"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js-es2015.js","sourcesContent":["import { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement } from './index-8fc7a46a.js';\nimport { a as chevronBack, b as chevronForward, d as chevronDown, f as caretUpSharp, g as caretDownSharp } from './index-c37799df.js';\nimport { b as getIonMode } from './ionic-global-e0b8d325.js';\nimport { startFocusVisible } from './focus-visible-ed0c99b3.js';\nimport { r as raf, e as renderHiddenInput, j as clamp } from './helpers-684323ee.js';\nimport { c as createColorClasses, g as getClassMap } from './theme-ff3fc52f.js';\nimport { B as BACKDROP, i as isCancel, e as prepareOverlay, d as present, f as dismiss, g as eventMethod, s as safeCall } from './overlays-0d94a120.js';\nimport { c as createAnimation } from './animation-46ad1639.js';\nimport { b as hapticSelectionChanged, h as hapticSelectionEnd, a as hapticSelectionStart } from './haptic-27b3f981.js';\nimport './hardware-back-button-4a6b37fb.js';\n\n/**\n * Returns true if the selected day is equal to the reference day\n */\nconst isSameDay = (baseParts, compareParts) => {\n  return (baseParts.month === compareParts.month &&\n    baseParts.day === compareParts.day &&\n    baseParts.year === compareParts.year);\n};\n/**\n * Returns true is the selected day is before the reference day.\n */\nconst isBefore = (baseParts, compareParts) => {\n  return (baseParts.year < compareParts.year ||\n    baseParts.year === compareParts.year && baseParts.month < compareParts.month ||\n    baseParts.year === compareParts.year && baseParts.month === compareParts.month && baseParts.day < compareParts.day);\n};\n/**\n * Returns true is the selected day is after the reference day.\n */\nconst isAfter = (baseParts, compareParts) => {\n  return (baseParts.year > compareParts.year ||\n    baseParts.year === compareParts.year && baseParts.month > compareParts.month ||\n    baseParts.year === compareParts.year && baseParts.month === compareParts.month && baseParts.day > compareParts.day);\n};\n\n/**\n * Determines if given year is a\n * leap year. Returns `true` if year\n * is a leap year. Returns `false`\n * otherwise.\n */\nconst isLeapYear = (year) => {\n  return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n};\nconst is24Hour = (locale, hourCycle) => {\n  /**\n   * If developer has explicitly enabled h23 time\n   * then return early and do not look at the system default.\n   */\n  if (hourCycle !== undefined) {\n    return hourCycle === 'h23';\n  }\n  /**\n   * If hourCycle was not specified, check the locale\n   * that is set on the user's device. We first check the\n   * Intl.DateTimeFormat hourCycle option as developers can encode this\n   * option into the locale string. Example: `en-US-u-hc-h23`\n   */\n  const formatted = new Intl.DateTimeFormat(locale, { hour: 'numeric' });\n  const options = formatted.resolvedOptions();\n  if (options.hourCycle !== undefined) {\n    return options.hourCycle === 'h23';\n  }\n  /**\n   * If hourCycle is not specified (either through lack\n   * of browser support or locale information) then fall\n   * back to this slower hourCycle check.\n   */\n  const date = new Date('5/18/2021 00:00');\n  const parts = formatted.formatToParts(date);\n  const hour = parts.find(p => p.type === 'hour');\n  if (!hour) {\n    throw new Error('Hour value not found from DateTimeFormat');\n  }\n  return hour.value === '00';\n};\n/**\n * Given a date object, returns the number\n * of days in that month.\n * Month value begin at 1, not 0.\n * i.e. January = month 1.\n */\nconst getNumDaysInMonth = (month, year) => {\n  return (month === 4 || month === 6 || month === 9 || month === 11) ? 30 : (month === 2) ? isLeapYear(year) ? 29 : 28 : 31;\n};\n\nconst twoDigit = (val) => {\n  return ('0' + (val !== undefined ? Math.abs(val) : '0')).slice(-2);\n};\nconst fourDigit = (val) => {\n  return ('000' + (val !== undefined ? Math.abs(val) : '0')).slice(-4);\n};\nconst convertDataToISO = (data) => {\n  // https://www.w3.org/TR/NOTE-datetime\n  let rtn = '';\n  if (data.year !== undefined) {\n    // YYYY\n    rtn = fourDigit(data.year);\n    if (data.month !== undefined) {\n      // YYYY-MM\n      rtn += '-' + twoDigit(data.month);\n      if (data.day !== undefined) {\n        // YYYY-MM-DD\n        rtn += '-' + twoDigit(data.day);\n        if (data.hour !== undefined) {\n          // YYYY-MM-DDTHH:mm:SS\n          rtn += `T${twoDigit(data.hour)}:${twoDigit(data.minute)}:00`;\n          if (data.tzOffset === undefined) {\n            // YYYY-MM-DDTHH:mm:SSZ\n            rtn += 'Z';\n          }\n          else {\n            // YYYY-MM-DDTHH:mm:SS+/-HH:mm\n            rtn += (data.tzOffset > 0 ? '+' : '-') + twoDigit(Math.floor(Math.abs(data.tzOffset / 60))) + ':' + twoDigit(data.tzOffset % 60);\n          }\n        }\n      }\n    }\n  }\n  else if (data.hour !== undefined) {\n    // HH:mm\n    rtn = twoDigit(data.hour) + ':' + twoDigit(data.minute);\n  }\n  return rtn;\n};\n/**\n * Converts an 12 hour value to 24 hours.\n */\nconst convert12HourTo24Hour = (hour, ampm) => {\n  if (ampm === undefined) {\n    return hour;\n  }\n  /**\n   * If AM and 12am\n   * then return 00:00.\n   * Otherwise just return\n   * the hour since it is\n   * already in 24 hour format.\n   */\n  if (ampm === 'am') {\n    if (hour === 12) {\n      return 0;\n    }\n    return hour;\n  }\n  /**\n   * If PM and 12pm\n   * just return 12:00\n   * since it is already\n   * in 24 hour format.\n   * Otherwise add 12 hours\n   * to the time.\n   */\n  if (hour === 12) {\n    return 12;\n  }\n  return hour + 12;\n};\nconst getStartOfWeek = (refParts) => {\n  const { dayOfWeek } = refParts;\n  if (dayOfWeek === null || dayOfWeek === undefined) {\n    throw new Error('No day of week provided');\n  }\n  return subtractDays(refParts, dayOfWeek);\n};\nconst getEndOfWeek = (refParts) => {\n  const { dayOfWeek } = refParts;\n  if (dayOfWeek === null || dayOfWeek === undefined) {\n    throw new Error('No day of week provided');\n  }\n  return addDays(refParts, 6 - dayOfWeek);\n};\nconst getNextDay = (refParts) => {\n  return addDays(refParts, 1);\n};\nconst getPreviousDay = (refParts) => {\n  return subtractDays(refParts, 1);\n};\nconst getPreviousWeek = (refParts) => {\n  return subtractDays(refParts, 7);\n};\nconst getNextWeek = (refParts) => {\n  return addDays(refParts, 7);\n};\n/**\n * Given datetime parts, subtract\n * numDays from the date.\n * Returns a new DatetimeParts object\n * Currently can only go backward at most 1 month.\n */\nconst subtractDays = (refParts, numDays) => {\n  const { month, day, year } = refParts;\n  if (day === null) {\n    throw new Error('No day provided');\n  }\n  const workingParts = {\n    month,\n    day,\n    year\n  };\n  workingParts.day = day - numDays;\n  /**\n   * If wrapping to previous month\n   * update days and decrement month\n   */\n  if (workingParts.day < 1) {\n    workingParts.month -= 1;\n  }\n  /**\n   * If moving to previous year, reset\n   * month to December and decrement year\n   */\n  if (workingParts.month < 1) {\n    workingParts.month = 12;\n    workingParts.year -= 1;\n  }\n  /**\n   * Determine how many days are in the current\n   * month\n   */\n  if (workingParts.day < 1) {\n    const daysInMonth = getNumDaysInMonth(workingParts.month, workingParts.year);\n    /**\n     * Take num days in month and add the\n     * number of underflow days. This number will\n     * be negative.\n     * Example: 1 week before Jan 2, 2021 is\n     * December 26, 2021 so:\n     * 2 - 7 = -5\n     * 31 + (-5) = 26\n     */\n    workingParts.day = daysInMonth + workingParts.day;\n  }\n  return workingParts;\n};\n/**\n * Given datetime parts, add\n * numDays to the date.\n * Returns a new DatetimeParts object\n * Currently can only go forward at most 1 month.\n */\nconst addDays = (refParts, numDays) => {\n  const { month, day, year } = refParts;\n  if (day === null) {\n    throw new Error('No day provided');\n  }\n  const workingParts = {\n    month,\n    day,\n    year\n  };\n  const daysInMonth = getNumDaysInMonth(month, year);\n  workingParts.day = day + numDays;\n  /**\n   * If wrapping to next month\n   * update days and increment month\n   */\n  if (workingParts.day > daysInMonth) {\n    workingParts.day -= daysInMonth;\n    workingParts.month += 1;\n  }\n  /**\n   * If moving to next year, reset\n   * month to January and increment year\n   */\n  if (workingParts.month > 12) {\n    workingParts.month = 1;\n    workingParts.year += 1;\n  }\n  return workingParts;\n};\n/**\n * Given DatetimeParts, generate the previous month.\n */\nconst getPreviousMonth = (refParts) => {\n  /**\n   * If current month is January, wrap backwards\n   *  to December of the previous year.\n   */\n  const month = (refParts.month === 1) ? 12 : refParts.month - 1;\n  const year = (refParts.month === 1) ? refParts.year - 1 : refParts.year;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = (numDaysInMonth < refParts.day) ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the next month.\n */\nconst getNextMonth = (refParts) => {\n  /**\n   * If current month is December, wrap forwards\n   *  to January of the next year.\n   */\n  const month = (refParts.month === 12) ? 1 : refParts.month + 1;\n  const year = (refParts.month === 12) ? refParts.year + 1 : refParts.year;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = (numDaysInMonth < refParts.day) ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\nconst changeYear = (refParts, yearDelta) => {\n  const month = refParts.month;\n  const year = refParts.year + yearDelta;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = (numDaysInMonth < refParts.day) ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the previous year.\n */\nconst getPreviousYear = (refParts) => {\n  return changeYear(refParts, -1);\n};\n/**\n * Given DatetimeParts, generate the next year.\n */\nconst getNextYear = (refParts) => {\n  return changeYear(refParts, 1);\n};\n/**\n * If PM, then internal value should\n * be converted to 24-hr time.\n * Does not apply when public\n * values are already 24-hr time.\n */\nconst getInternalHourValue = (hour, use24Hour, ampm) => {\n  if (use24Hour) {\n    return hour;\n  }\n  return convert12HourTo24Hour(hour, ampm);\n};\n/**\n * Unless otherwise stated, all month values are\n * 1 indexed instead of the typical 0 index in JS Date.\n * Example:\n *   January = Month 0 when using JS Date\n *   January = Month 1 when using this datetime util\n */\n/**\n * Given the current datetime parts and a new AM/PM value\n * calculate what the hour should be in 24-hour time format.\n * Used when toggling the AM/PM segment since we store our hours\n * in 24-hour time format internally.\n */\nconst calculateHourFromAMPM = (currentParts, newAMPM) => {\n  const { ampm: currentAMPM, hour } = currentParts;\n  let newHour = hour;\n  /**\n   * If going from AM --> PM, need to update the\n   *\n   */\n  if (currentAMPM === 'am' && newAMPM === 'pm') {\n    newHour = convert12HourTo24Hour(newHour, 'pm');\n    /**\n     * If going from PM --> AM\n     */\n  }\n  else if (currentAMPM === 'pm' && newAMPM === 'am') {\n    newHour = Math.abs(newHour - 12);\n  }\n  return newHour;\n};\n\n/**\n * Returns the current date as\n * an ISO string in the user's\n * timezone.\n */\nconst getToday = () => {\n  /**\n   * Grab the current date object\n   * as well as the timezone offset\n   */\n  const date = new Date();\n  const tzOffset = date.getTimezoneOffset();\n  /**\n   * When converting to ISO string, everything is\n   * set to UTC. Since we want to show these dates\n   * relative to the user's timezone, we need to\n   * subtract the timezone offset from the date\n   * so that when `toISOString()` adds it back\n   * there was a net change of zero hours from the\n   * local date.\n   */\n  date.setHours(date.getHours() - (tzOffset / 60));\n  return date.toISOString();\n};\nconst minutes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59];\nconst hour12 = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nconst hour23 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n/**\n * Given a locale and a mode,\n * return an array with formatted days\n * of the week. iOS should display days\n * such as \"Mon\" or \"Tue\".\n * MD should display days such as \"M\"\n * or \"T\".\n */\nconst getDaysOfWeek = (locale, mode, firstDayOfWeek = 0) => {\n  /**\n   * Nov 1st, 2020 starts on a Sunday.\n   * ion-datetime assumes weeks start on Sunday,\n   * but is configurable via `firstDayOfWeek`.\n   */\n  const weekdayFormat = mode === 'ios' ? 'short' : 'narrow';\n  const intl = new Intl.DateTimeFormat(locale, { weekday: weekdayFormat });\n  const startDate = new Date('11/01/2020');\n  const daysOfWeek = [];\n  /**\n   * For each day of the week,\n   * get the day name.\n   */\n  for (let i = firstDayOfWeek; i < firstDayOfWeek + 7; i++) {\n    const currentDate = new Date(startDate);\n    currentDate.setDate(currentDate.getDate() + i);\n    daysOfWeek.push(intl.format(currentDate));\n  }\n  return daysOfWeek;\n};\n/**\n * Returns an array containing all of the\n * days in a month for a given year. Values are\n * aligned with a week calendar starting on\n * the firstDayOfWeek value (Sunday by default)\n * using null values.\n */\nconst getDaysOfMonth = (month, year, firstDayOfWeek) => {\n  const numDays = getNumDaysInMonth(month, year);\n  const firstOfMonth = new Date(`${month}/1/${year}`).getDay();\n  /**\n   * To get the first day of the month aligned on the correct\n   * day of the week, we need to determine how many \"filler\" days\n   * to generate. These filler days as empty/disabled buttons\n   * that fill the space of the days of the week before the first\n   * of the month.\n   *\n   * There are two cases here:\n   *\n   * 1. If firstOfMonth = 4, firstDayOfWeek = 0 then the offset\n   * is (4 - (0 + 1)) = 3. Since the offset loop goes from 0 to 3 inclusive,\n   * this will generate 4 filler days (0, 1, 2, 3), and then day of week 4 will have\n   * the first day of the month.\n   *\n   * 2. If firstOfMonth = 2, firstDayOfWeek = 4 then the offset\n   * is (6 - (4 - 2)) = 4. Since the offset loop goes from 0 to 4 inclusive,\n   * this will generate 5 filler days (0, 1, 2, 3, 4), and then day of week 5 will have\n   * the first day of the month.\n   */\n  const offset = firstOfMonth >= firstDayOfWeek ? firstOfMonth - (firstDayOfWeek + 1) : 6 - (firstDayOfWeek - firstOfMonth);\n  let days = [];\n  for (let i = 1; i <= numDays; i++) {\n    days.push({ day: i, dayOfWeek: (offset + i) % 7 });\n  }\n  for (let i = 0; i <= offset; i++) {\n    days = [\n      { day: null, dayOfWeek: null },\n      ...days\n    ];\n  }\n  return days;\n};\n/**\n * Given a local, reference datetime parts and option\n * max/min bound datetime parts, calculate the acceptable\n * hour and minute values according to the bounds and locale.\n */\nconst generateTime = (refParts, hourCycle = 'h12', minParts, maxParts, hourValues, minuteValues) => {\n  let processedHours = hourCycle === 'h23' ? hour23 : hour12;\n  let processedMinutes = minutes;\n  let isAMAllowed = true;\n  let isPMAllowed = true;\n  if (hourValues) {\n    processedHours = processedHours.filter(hour => hourValues.includes(hour));\n  }\n  if (minuteValues) {\n    processedMinutes = processedMinutes.filter(minute => minuteValues.includes(minute));\n  }\n  if (minParts) {\n    /**\n     * If ref day is the same as the\n     * minimum allowed day, filter hour/minute\n     * values according to min hour and minute.\n     */\n    if (isSameDay(refParts, minParts)) {\n      /**\n       * Users may not always set the hour/minute for\n       * min value (i.e. 2021-06-02) so we should allow\n       * all hours/minutes in that case.\n       */\n      if (minParts.hour !== undefined) {\n        processedHours = processedHours.filter(hour => {\n          const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n          return convertedHour >= minParts.hour;\n        });\n        isAMAllowed = minParts.hour < 13;\n      }\n      if (minParts.minute !== undefined) {\n        processedMinutes = processedMinutes.filter(minute => minute >= minParts.minute);\n      }\n      /**\n       * If ref day is before minimum\n       * day do not render any hours/minute values\n       */\n    }\n    else if (isBefore(refParts, minParts)) {\n      processedHours = [];\n      processedMinutes = [];\n      isAMAllowed = isPMAllowed = false;\n    }\n  }\n  if (maxParts) {\n    /**\n     * If ref day is the same as the\n     * maximum allowed day, filter hour/minute\n     * values according to max hour and minute.\n     */\n    if (isSameDay(refParts, maxParts)) {\n      /**\n       * Users may not always set the hour/minute for\n       * max value (i.e. 2021-06-02) so we should allow\n       * all hours/minutes in that case.\n       */\n      if (maxParts.hour !== undefined) {\n        processedHours = processedHours.filter(hour => {\n          const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n          return convertedHour <= maxParts.hour;\n        });\n        isPMAllowed = maxParts.hour >= 13;\n      }\n      if (maxParts.minute !== undefined) {\n        processedMinutes = processedMinutes.filter(minute => minute <= maxParts.minute);\n      }\n      /**\n       * If ref day is after minimum\n       * day do not render any hours/minute values\n       */\n    }\n    else if (isAfter(refParts, maxParts)) {\n      processedHours = [];\n      processedMinutes = [];\n      isAMAllowed = isPMAllowed = false;\n    }\n  }\n  return {\n    hours: processedHours,\n    minutes: processedMinutes,\n    am: isAMAllowed,\n    pm: isPMAllowed\n  };\n};\n/**\n * Given DatetimeParts, generate the previous,\n * current, and and next months.\n */\nconst generateMonths = (refParts) => {\n  return [\n    getPreviousMonth(refParts),\n    { month: refParts.month, year: refParts.year, day: refParts.day },\n    getNextMonth(refParts)\n  ];\n};\nconst getPickerMonths = (locale, refParts, minParts, maxParts, monthValues) => {\n  const { year } = refParts;\n  const months = [];\n  if (monthValues !== undefined) {\n    let processedMonths = monthValues;\n    if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.month) !== undefined) {\n      processedMonths = processedMonths.filter(month => month <= maxParts.month);\n    }\n    if ((minParts === null || minParts === void 0 ? void 0 : minParts.month) !== undefined) {\n      processedMonths = processedMonths.filter(month => month >= minParts.month);\n    }\n    processedMonths.forEach(processedMonth => {\n      const date = new Date(`${processedMonth}/1/${year}`);\n      const monthString = new Intl.DateTimeFormat(locale, { month: 'long' }).format(date);\n      months.push({ text: monthString, value: processedMonth });\n    });\n  }\n  else {\n    const maxMonth = maxParts && maxParts.year === year ? maxParts.month : 12;\n    const minMonth = minParts && minParts.year === year ? minParts.month : 1;\n    for (let i = minMonth; i <= maxMonth; i++) {\n      const date = new Date(`${i}/1/${year}`);\n      const monthString = new Intl.DateTimeFormat(locale, { month: 'long' }).format(date);\n      months.push({ text: monthString, value: i });\n    }\n  }\n  return months;\n};\nconst getCalendarYears = (refParts, minParts, maxParts, yearValues) => {\n  if (yearValues !== undefined) {\n    let processedYears = yearValues;\n    if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) !== undefined) {\n      processedYears = processedYears.filter(year => year <= maxParts.year);\n    }\n    if ((minParts === null || minParts === void 0 ? void 0 : minParts.year) !== undefined) {\n      processedYears = processedYears.filter(year => year >= minParts.year);\n    }\n    return processedYears;\n  }\n  else {\n    const { year } = refParts;\n    const maxYear = ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) || year);\n    const minYear = ((minParts === null || minParts === void 0 ? void 0 : minParts.year) || year - 100);\n    const years = [];\n    for (let i = maxYear; i >= minYear; i--) {\n      years.push(i);\n    }\n    return years;\n  }\n};\n\n/**\n * Adds padding to a time value so\n * that it is always 2 digits.\n */\nconst addTimePadding = (value) => {\n  const valueToString = value.toString();\n  if (valueToString.length > 1) {\n    return valueToString;\n  }\n  return `0${valueToString}`;\n};\n/**\n * Formats the hour value so that it\n * is always 2 digits. Only applies\n * if using 12 hour format.\n */\nconst getFormattedHour = (hour, use24Hour) => {\n  if (!use24Hour) {\n    return hour.toString();\n  }\n  return addTimePadding(hour);\n};\n/**\n * Generates an aria-label to be read by screen readers\n * given a local, a date, and whether or not that date is\n * today's date.\n */\nconst generateDayAriaLabel = (locale, today, refParts) => {\n  if (refParts.day === null) {\n    return null;\n  }\n  /**\n   * MM/DD/YYYY will return midnight in the user's timezone.\n   */\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year}`);\n  const labelString = new Intl.DateTimeFormat(locale, { weekday: 'long', month: 'long', day: 'numeric' }).format(date);\n  /**\n   * If date is today, prepend \"Today\" so screen readers indicate\n   * that the date is today.\n   */\n  return (today) ? `Today, ${labelString}` : labelString;\n};\n/**\n * Gets the day of the week, month, and day\n * Used for the header in MD mode.\n */\nconst getMonthAndDay = (locale, refParts) => {\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year}`);\n  return new Intl.DateTimeFormat(locale, { weekday: 'short', month: 'short', day: 'numeric' }).format(date);\n};\n/**\n * Given a locale and a date object,\n * return a formatted string that includes\n * the month name and full year.\n * Example: May 2021\n */\nconst getMonthAndYear = (locale, refParts) => {\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year}`);\n  return new Intl.DateTimeFormat(locale, { month: 'long', year: 'numeric' }).format(date);\n};\n\nconst ISO_8601_REGEXP = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\nconst TIME_REGEXP = /^((\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n/**\n * Use to convert a string of comma separated numbers or\n * an array of numbers, and clean up any user input\n */\nconst convertToArrayOfNumbers = (input) => {\n  if (input === undefined) {\n    return;\n  }\n  let processedInput = input;\n  if (typeof input === 'string') {\n    // convert the string to an array of strings\n    // auto remove any whitespace and [] characters\n    processedInput = input.replace(/\\[|\\]|\\s/g, '').split(',');\n  }\n  let values;\n  if (Array.isArray(processedInput)) {\n    // ensure each value is an actual number in the returned array\n    values = processedInput\n      .map((num) => parseInt(num, 10))\n      .filter(isFinite);\n  }\n  else {\n    values = [processedInput];\n  }\n  return values;\n};\n/**\n * Extracts date information\n * from a .calendar-day element\n * into DatetimeParts.\n */\nconst getPartsFromCalendarDay = (el) => {\n  return {\n    month: parseInt(el.getAttribute('data-month'), 10),\n    day: parseInt(el.getAttribute('data-day'), 10),\n    year: parseInt(el.getAttribute('data-year'), 10),\n    dayOfWeek: parseInt(el.getAttribute('data-day-of-week'), 10)\n  };\n};\n/**\n * Given an ISO-8601 string, format out the parts\n * We do not use the JS Date object here because\n * it adjusts the date for the current timezone.\n */\nconst parseDate = (val) => {\n  // manually parse IS0 cuz Date.parse cannot be trusted\n  // ISO 8601 format: 1994-12-15T13:47:20Z\n  let parse = null;\n  if (val != null && val !== '') {\n    // try parsing for just time first, HH:MM\n    parse = TIME_REGEXP.exec(val);\n    if (parse) {\n      // adjust the array so it fits nicely with the datetime parse\n      parse.unshift(undefined, undefined);\n      parse[2] = parse[3] = undefined;\n    }\n    else {\n      // try parsing for full ISO datetime\n      parse = ISO_8601_REGEXP.exec(val);\n    }\n  }\n  if (parse === null) {\n    // wasn't able to parse the ISO datetime\n    return undefined;\n  }\n  // ensure all the parse values exist with at least 0\n  for (let i = 1; i < 8; i++) {\n    parse[i] = parse[i] !== undefined ? parseInt(parse[i], 10) : undefined;\n  }\n  let tzOffset = 0;\n  if (parse[9] && parse[10]) {\n    // hours\n    tzOffset = parseInt(parse[10], 10) * 60;\n    if (parse[11]) {\n      // minutes\n      tzOffset += parseInt(parse[11], 10);\n    }\n    if (parse[9] === '-') {\n      // + or -\n      tzOffset *= -1;\n    }\n  }\n  return {\n    year: parse[1],\n    month: parse[2],\n    day: parse[3],\n    hour: parse[4],\n    minute: parse[5],\n    second: parse[6],\n    millisecond: parse[7],\n    tzOffset,\n  };\n};\n\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date, and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  const isActive = isSameDay(refParts, activeParts);\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts)\n  };\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-presentation-date-time),:host(.datetime-presentation-time-date),:host(.datetime-presentation-date){height:100%}:host(.datetime-size-fixed){width:350px}:host(.datetime-size-cover){width:100%;min-width:350px}:host .calendar-body,:host .time-column,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body,:host(.datetime-ready) .time-column{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;left:50%;top:50%;position:absolute;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host-context([dir=rtl]){left:unset;right:unset;right:50%}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .time-base{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:2px solid transparent;background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);font-size:22px;font-weight:400;text-align:center;overflow-y:hidden}:host .time-base.time-base-active{border:2px solid var(--ion-color-base)}:host .time-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;height:100%}:host .time-column{position:relative;height:100%;outline:none;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-y:scroll;overflow-x:hidden;-webkit-overflow-scrolling:touch;scrollbar-width:none}@media (any-hover: hover){:host .time-column:focus{outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .time-column.time-column-active{background:transparent;color:var(--ion-color-base)}:host .time-base.time-base-active .time-column:not(.time-column-active),:host .time-base.time-base-active .time-separator{pointer-events:none;opacity:0.4}:host .time-column::-webkit-scrollbar{display:none}:host .time-column-hours .time-item{text-align:end}:host .time-column-minutes .time-item{text-align:start}:host .time-item{scroll-snap-align:center;height:100%}:host .time-separator{height:100%}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{display:-ms-flexbox;display:flex}:host .time-ampm{width:100px}:host .time-ampm ion-segment-button{min-width:50px}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host .datetime-year-body .datetime-picker-col{margin-left:10px;margin-right:10px;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-year-body .datetime-picker-col{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}:host .datetime-picker-before{left:0;top:0;position:absolute;width:100%;height:82px;background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7) 100%);z-index:10;pointer-events:none}:host-context([dir=rtl]){left:unset;right:unset;right:0}:host .datetime-picker-after{left:0;top:116px;position:absolute;width:100%;height:115px;background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7) 100%);z-index:10;pointer-events:none}:host-context([dir=rtl]){left:unset;right:unset;right:0}:host .datetime-year-body{display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;font-size:22px;z-index:0}:host .datetime-picker-col{-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;height:200px;outline:none}@media (any-hover: hover){:host .datetime-picker-col:focus{background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .datetime-picker-col::-webkit-scrollbar{display:none}:host .picker-col-item{height:38px;line-height:38px;scroll-snap-align:center}:host .picker-col-item-empty{scroll-snap-align:none}:host .datetime-year-body .datetime-picker-col:first-of-type{text-align:left}:host .datetime-year-body .datetime-picker-col:last-of-type{text-align:right}:host(.datetime-presentation-year) .datetime-picker-col:last-of-type,:host(.datetime-presentation-month) .datetime-picker-col:last-of-type{text-align:center}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time),:host(.datetime-presentation-time-date),:host(.datetime-presentation-date){min-height:300px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color);font-size:14px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px;font-weight:600}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-base{border-radius:8px;margin-left:0;margin-right:8px;margin-top:0;margin-bottom:0;width:68px;height:28px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-base{margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host .time-column{border-radius:8px}:host .time-item{line-height:28px}:host .datetime-year-body .datetime-picker-col{padding-left:16px;padding-right:16px;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-year-body .datetime-picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-picker-before{background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%)}:host .datetime-picker-after{background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%)}:host .datetime-picker-highlight{border-radius:8px;left:0;right:0;top:50%;bottom:0;margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;position:absolute;width:calc(100% - 32px);height:34px;-webkit-transform:translateY(-50%);transform:translateY(-50%);background:var(--ion-color-step-150, #eeeeef);z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-picker-highlight{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-presentation-date-time),:host(.datetime-presentation-time-date),:host(.datetime-presentation-date){height:100%}:host(.datetime-size-fixed){width:350px}:host(.datetime-size-cover){width:100%;min-width:350px}:host .calendar-body,:host .time-column,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body,:host(.datetime-ready) .time-column{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;left:50%;top:50%;position:absolute;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host-context([dir=rtl]){left:unset;right:unset;right:50%}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .time-base{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:2px solid transparent;background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);font-size:22px;font-weight:400;text-align:center;overflow-y:hidden}:host .time-base.time-base-active{border:2px solid var(--ion-color-base)}:host .time-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;height:100%}:host .time-column{position:relative;height:100%;outline:none;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-y:scroll;overflow-x:hidden;-webkit-overflow-scrolling:touch;scrollbar-width:none}@media (any-hover: hover){:host .time-column:focus{outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .time-column.time-column-active{background:transparent;color:var(--ion-color-base)}:host .time-base.time-base-active .time-column:not(.time-column-active),:host .time-base.time-base-active .time-separator{pointer-events:none;opacity:0.4}:host .time-column::-webkit-scrollbar{display:none}:host .time-column-hours .time-item{text-align:end}:host .time-column-minutes .time-item{text-align:start}:host .time-item{scroll-snap-align:center;height:100%}:host .time-separator{height:100%}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{display:-ms-flexbox;display:flex}:host .time-ampm{width:100px}:host .time-ampm ion-segment-button{min-width:50px}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host .datetime-year-body .datetime-picker-col{margin-left:10px;margin-right:10px;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-year-body .datetime-picker-col{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}:host .datetime-picker-before{left:0;top:0;position:absolute;width:100%;height:82px;background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7) 100%);z-index:10;pointer-events:none}:host-context([dir=rtl]){left:unset;right:unset;right:0}:host .datetime-picker-after{left:0;top:116px;position:absolute;width:100%;height:115px;background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.7) 100%);z-index:10;pointer-events:none}:host-context([dir=rtl]){left:unset;right:unset;right:0}:host .datetime-year-body{display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;font-size:22px;z-index:0}:host .datetime-picker-col{-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;height:200px;outline:none}@media (any-hover: hover){:host .datetime-picker-col:focus{background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .datetime-picker-col::-webkit-scrollbar{display:none}:host .picker-col-item{height:38px;line-height:38px;scroll-snap-align:center}:host .picker-col-item-empty{scroll-snap-align:none}:host .datetime-year-body .datetime-picker-col:first-of-type{text-align:left}:host .datetime-year-body .datetime-picker-col:last-of-type{text-align:right}:host(.datetime-presentation-year) .datetime-picker-col:last-of-type,:host(.datetime-presentation-month) .datetime-picker-col:last-of-type{text-align:center}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host .time-base{border-radius:4px;margin-left:0;margin-right:8px;margin-top:0;margin-bottom:0;width:68px;height:28px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-base{margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host .time-column{border-radius:4px}:host .time-item{line-height:28px}:host .time-ampm ion-segment{border-radius:4px;border:1px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1)}:host .time-ampm ion-segment-button{--indicator-height:0px;--background-checked:rgba(var(--ion-color-base-rgb), 0.1);min-height:30px}:host .time-ampm ion-segment-button.segment-button-checked{background:var(--background-checked)}:host .datetime-picker-col{border-radius:8px;padding-left:8px;padding-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .picker-col-item{font-size:18px}:host .datetime-picker-before{background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), color-stop(90%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0) 90%)}:host .datetime-picker-after{background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), color-stop(90%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0) 90%)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}:host .picker-col-item-active{color:var(--ion-color-base)}\";\n\nconst Datetime = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.overlayIsPresenting = false;\n    this.showMonthAndYear = false;\n    this.activeParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.todayParts = parseDate(getToday());\n    this.isPresented = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. On `ios` mode this will include the\n     * slotted title, and on `md` mode this will include\n     * the slotted title and the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts) => {\n      this.activeParts = Object.assign({}, parts);\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) ||\n          !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      this.calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      if (this.min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.min);\n      this.minParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      };\n    };\n    this.processMaxParts = () => {\n      if (this.max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.max);\n      this.maxParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      };\n    };\n    this.initializeCalendarIOListeners = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const mode = getIonMode(this);\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have IntersectionObservers\n       * on the previous and next month elements to append/prepend\n       * new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      /**\n       * Before setting up the IntersectionObserver,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth;\n        let endIO;\n        let startIO;\n        const ioCallback = (callbackType, entries) => {\n          const refIO = (callbackType === 'start') ? startIO : endIO;\n          const refMonth = (callbackType === 'start') ? startMonth : endMonth;\n          const refMonthFn = (callbackType === 'start') ? getPreviousMonth : getNextMonth;\n          /**\n           * If the month is not fully in view, do not do anything\n           */\n          const ev = entries[0];\n          if (!ev.isIntersecting) {\n            return;\n          }\n          /**\n           * When presenting an inline overlay,\n           * subsequent presentations will cause\n           * the IO to fire again (since the overlay\n           * is now visible and therefore the calendar\n           * months are intersecting).\n           */\n          if (this.overlayIsPresenting) {\n            this.overlayIsPresenting = false;\n            return;\n          }\n          /**\n           * On iOS, we need to set pointer-events: none\n           * when the user is almost done with the gesture\n           * so that they cannot quickly swipe while\n           * the scrollable container is snapping.\n           * Updating the container while snapping\n           * causes WebKit to snap incorrectly.\n           */\n          if (mode === 'ios') {\n            const ratio = ev.intersectionRatio;\n            const shouldDisable = Math.abs(ratio - 0.7) <= 0.1;\n            if (shouldDisable) {\n              calendarBodyRef.style.setProperty('pointer-events', 'none');\n              return;\n            }\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Remove the IO temporarily\n           * otherwise you can sometimes get duplicate\n           * events when rubber banding.\n           */\n          if (refIO === undefined) {\n            return;\n          }\n          refIO.disconnect();\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            const { month, year, day } = refMonthFn(this.workingParts);\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth;\n            calendarBodyRef.style.removeProperty('overflow');\n            calendarBodyRef.style.removeProperty('pointer-events');\n            /**\n             * Now that state has been updated\n             * and the correct month is in view,\n             * we can resume the IO.\n             */\n            // tslint:disable-next-line\n            if (refIO === undefined) {\n              return;\n            }\n            refIO.observe(refMonth);\n          });\n        };\n        /**\n         * Listen on the first month to\n         * prepend a new month and on the last\n         * month to append a new month.\n         * The 0.7 threshold is required on ios\n         * so that we can remove pointer-events\n         * when adding new months.\n         * Adding to a scroll snapping container\n         * while the container is snapping does not\n         * completely work as expected in WebKit.\n         * Adding pointer-events: none allows us to\n         * avoid these issues.\n         *\n         * This should be fine on Chromium, but\n         * when you set pointer-events: none\n         * it applies to active gestures which is not\n         * something WebKit does.\n         */\n        endIO = new IntersectionObserver(ev => ioCallback('end', ev), {\n          threshold: mode === 'ios' ? [0.7, 1] : 1,\n          root: calendarBodyRef\n        });\n        endIO.observe(endMonth);\n        startIO = new IntersectionObserver(ev => ioCallback('start', ev), {\n          threshold: mode === 'ios' ? [0.7, 1] : 1,\n          root: calendarBodyRef\n        });\n        startIO.observe(startMonth);\n        this.destroyCalendarIO = () => {\n          endIO === null || endIO === void 0 ? void 0 : endIO.disconnect();\n          startIO === null || startIO === void 0 ? void 0 : startIO.disconnect();\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyListeners = () => {\n      const { destroyCalendarIO, destroyKeyboardMO, destroyTimeScroll, destroyMonthAndYearScroll } = this;\n      if (destroyCalendarIO !== undefined) {\n        destroyCalendarIO();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n      if (destroyTimeScroll !== undefined) {\n        destroyTimeScroll();\n      }\n      if (destroyMonthAndYearScroll !== undefined) {\n        destroyMonthAndYearScroll();\n      }\n    };\n    /**\n     * When doing subsequent presentations of an inline\n     * overlay, the IO callback will fire again causing\n     * the calendar to go back one month. We need to listen\n     * for the presentation of the overlay so we can properly\n     * cancel that IO callback.\n     */\n    this.initializeOverlayListener = () => {\n      const overlay = this.el.closest('ion-popover, ion-modal');\n      if (overlay === null) {\n        return;\n      }\n      overlay.addEventListener('willPresent', () => {\n        this.overlayIsPresenting = true;\n      });\n    };\n    this.initializeMonthAndYearScrollListeners = () => {\n      const { monthRef, yearRef, workingParts } = this;\n      const { year, month } = workingParts;\n      /**\n       * Scroll initial month and year into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollTop instead.\n       */\n      let activeYearEl = yearRef === null || yearRef === void 0 ? void 0 : yearRef.querySelector(`.picker-col-item[data-value=\"${year}\"]`);\n      if (activeYearEl) {\n        yearRef.scrollTop = activeYearEl.offsetTop - (activeYearEl.clientHeight * 2);\n        activeYearEl.classList.add(PICKER_COL_ACTIVE);\n      }\n      let activeMonthEl = monthRef === null || monthRef === void 0 ? void 0 : monthRef.querySelector(`.picker-col-item[data-value=\"${month}\"]`);\n      if (activeMonthEl) {\n        monthRef.scrollTop = activeMonthEl.offsetTop - (activeMonthEl.clientHeight * 2);\n        activeMonthEl.classList.add(PICKER_COL_ACTIVE);\n      }\n      let timeout;\n      const scrollCallback = (colType) => {\n        raf(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n          const activeCol = colType === 'month' ? monthRef : yearRef;\n          if (!activeCol) {\n            return;\n          }\n          const bbox = activeCol.getBoundingClientRect();\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n          const centerX = bbox.x + (bbox.width / 2);\n          const centerY = bbox.y + (bbox.height / 2);\n          const activeElement = this.el.shadowRoot.elementFromPoint(centerX, centerY);\n          const prevActiveEl = colType === 'month' ? activeMonthEl : activeYearEl;\n          if (prevActiveEl !== null) {\n            prevActiveEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          if (colType === 'month') {\n            activeMonthEl = activeElement;\n          }\n          else if (colType === 'year') {\n            activeYearEl = activeElement;\n          }\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(() => {\n            const dataValue = activeElement.getAttribute('data-value');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n            if (dataValue === null) {\n              return;\n            }\n            const value = parseInt(dataValue, 10);\n            const { presentation } = this;\n            if (colType === 'month') {\n              this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month: value }));\n              /**\n               * If developers are only selecting month/month-year\n               * then we need to call ionChange as they will\n               * not be selecting dates too.\n               */\n              if (presentation === 'month' || presentation === 'month-year') {\n                this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month: value }));\n              }\n            }\n            else {\n              this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { year: value }));\n              if (presentation === 'year' || presentation === 'month-year') {\n                this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { year: value }));\n              }\n            }\n            /**\n             * If the year changed, it is possible that\n             * the allowed month values have changed and the scroll\n             * position got reset\n             */\n            raf(() => {\n              const { month: workingMonth, year: workingYear } = this.workingParts;\n              const monthEl = monthRef === null || monthRef === void 0 ? void 0 : monthRef.querySelector(`.picker-col-item[data-value='${workingMonth}']`);\n              const yearEl = yearRef === null || yearRef === void 0 ? void 0 : yearRef.querySelector(`.picker-col-item[data-value='${workingYear}']`);\n              if (monthEl && monthRef) {\n                this.centerPickerItemInView(monthEl, monthRef, 'auto');\n              }\n              if (yearEl && yearRef) {\n                this.centerPickerItemInView(yearEl, yearRef, 'auto');\n              }\n            });\n          }, 250);\n        });\n      };\n      /**\n       * Add scroll listeners to the month and year containers.\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when we do our initial scrollIntoView above.\n       */\n      raf(() => {\n        const monthScroll = () => scrollCallback('month');\n        const yearScroll = () => scrollCallback('year');\n        monthRef === null || monthRef === void 0 ? void 0 : monthRef.addEventListener('scroll', monthScroll);\n        yearRef === null || yearRef === void 0 ? void 0 : yearRef.addEventListener('scroll', yearScroll);\n        this.destroyMonthAndYearScroll = () => {\n          monthRef === null || monthRef === void 0 ? void 0 : monthRef.removeEventListener('scroll', monthScroll);\n          yearRef === null || yearRef === void 0 ? void 0 : yearRef.removeEventListener('scroll', yearScroll);\n        };\n      });\n    };\n    this.initializeTimeScrollListener = () => {\n      const { timeBaseRef, timeHourRef, timeMinuteRef } = this;\n      if (!timeBaseRef || !timeHourRef || !timeMinuteRef) {\n        return;\n      }\n      const { hour, minute } = this.workingParts;\n      /**\n       * Scroll initial hour and minute into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollTop instead.\n       */\n      raf(() => {\n        const initialHour = timeHourRef.querySelector(`.time-item[data-value=\"${hour}\"]`);\n        if (initialHour) {\n          timeHourRef.scrollTop = initialHour.offsetTop;\n        }\n        const initialMinute = timeMinuteRef.querySelector(`.time-item[data-value=\"${minute}\"]`);\n        if (initialMinute) {\n          timeMinuteRef.scrollTop = initialMinute.offsetTop;\n        }\n        /**\n         * Highlight the container and\n         * appropriate column when scrolling.\n         */\n        let timeout;\n        const scrollCallback = (colType) => {\n          raf(() => {\n            if (timeout) {\n              clearTimeout(timeout);\n              timeout = undefined;\n            }\n            const activeCol = colType === 'hour' ? timeHourRef : timeMinuteRef;\n            const otherCol = colType === 'hour' ? timeMinuteRef : timeHourRef;\n            timeBaseRef.classList.add('time-base-active');\n            activeCol.classList.add('time-column-active');\n            timeout = setTimeout(() => {\n              timeBaseRef.classList.remove('time-base-active');\n              activeCol.classList.remove('time-column-active');\n              otherCol.classList.remove('time-column-active');\n              const bbox = activeCol.getBoundingClientRect();\n              /**\n               * Do not use floating point\n               * here as some browsers may clamp\n               * or round down.\n               */\n              const x = Math.ceil(bbox.x + 1);\n              const y = Math.ceil(bbox.y + 1);\n              const activeElement = this.el.shadowRoot.elementFromPoint(x, y);\n              const value = parseInt(activeElement.getAttribute('data-value'), 10);\n              if (colType === 'hour') {\n                this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { hour: value }));\n                this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { hour: value }));\n              }\n              else {\n                this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { minute: value }));\n                this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { minute: value }));\n              }\n            }, 250);\n          });\n        };\n        /**\n         * Add scroll listeners to the hour and minute containers.\n         * Wrap this in an raf so that the scroll callback\n         * does not fire when we do our initial scrollIntoView above.\n         */\n        raf(() => {\n          const hourScroll = () => scrollCallback('hour');\n          const minuteScroll = () => scrollCallback('minute');\n          timeHourRef.addEventListener('scroll', hourScroll);\n          timeMinuteRef.addEventListener('scroll', minuteScroll);\n          this.destroyTimeScroll = () => {\n            timeHourRef.removeEventListener('scroll', hourScroll);\n            timeMinuteRef.removeEventListener('scroll', minuteScroll);\n          };\n        });\n      });\n    };\n    this.processValue = (value) => {\n      const valueToProcess = value || getToday();\n      const { month, day, year, hour, minute, tzOffset } = parseDate(valueToProcess);\n      this.workingParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm: hour >= 12 ? 'pm' : 'am'\n      };\n      this.activeParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm: hour >= 12 ? 'pm' : 'am'\n      };\n    };\n    this.nextMonth = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: nextMonth.offsetWidth * 2,\n        behavior: 'smooth'\n      });\n    };\n    this.prevMonth = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    this.emitStyle();\n    this.ionChange.emit({\n      value: this.value\n    });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    /**\n     * Prevent convertDataToISO from doing any\n     * kind of transformation based on timezone\n     * This cancels out any change it attempts to make\n     *\n     * Important: Take the timezone offset based on\n     * the date that is currently selected, otherwise\n     * there can be 1 hr difference when dealing w/ DST\n     */\n    const date = new Date(convertDataToISO(this.workingParts));\n    this.workingParts.tzOffset = date.getTimezoneOffset() * -1;\n    this.value = convertDataToISO(this.workingParts);\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    let visibleIO;\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeCalendarIOListeners();\n      this.initializeKeyboardListeners();\n      this.initializeTimeScrollListener();\n      this.initializeOverlayListener();\n      this.initializeMonthAndYearScrollListeners();\n      /**\n       * TODO: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    visibleIO.observe(this.el);\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    let hiddenIO;\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyListeners();\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    hiddenIO.observe(this.el);\n  }\n  componentWillLoad() {\n    this.processValue(this.value);\n    this.processMinParts();\n    this.processMaxParts();\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive': true,\n      'datetime': true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  renderFooter() {\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !this.showDefaultButtons) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, h(\"ion-button\", { color: this.color, onClick: () => this.cancel(true) }, this.cancelText), h(\"div\", null, this.showClearButton && h(\"ion-button\", { color: this.color, onClick: () => clearButtonClick() }, this.clearText), h(\"ion-button\", { color: this.color, onClick: () => this.confirm(true) }, this.doneText))))))));\n  }\n  centerPickerItemInView(target, container, behavior = 'smooth') {\n    container.scroll({\n      // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n      top: target.offsetTop - (3 * target.clientHeight) + (target.clientHeight / 2),\n      left: 0,\n      behavior\n    });\n  }\n  renderYearView() {\n    const { presentation } = this;\n    const calendarYears = getCalendarYears(this.todayParts, this.minParts, this.maxParts, this.parsedYearValues);\n    const showMonth = presentation !== 'year';\n    const showYear = presentation !== 'month';\n    return (h(\"div\", { class: \"datetime-year\" }, h(\"div\", { class: \"datetime-year-body\" }, h(\"div\", { class: \"datetime-picker-before\" }), h(\"div\", { class: \"datetime-picker-after\" }), h(\"div\", { class: \"datetime-picker-highlight\" }), showMonth && h(\"div\", { class: \"datetime-picker-col month-col\", ref: el => this.monthRef = el, tabindex: \"0\" }, h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), getPickerMonths(this.locale, this.workingParts, this.minParts, this.maxParts, this.parsedMonthValues).map(month => {\n      return (h(\"div\", { class: \"picker-col-item\", \"data-value\": month.value, onClick: (ev) => this.centerPickerItemInView(ev.target, this.monthRef) }, month.text));\n    }), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\")), showYear && h(\"div\", { class: \"datetime-picker-col year-col\", ref: el => this.yearRef = el, tabindex: \"0\" }, h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), calendarYears.map(year => {\n      return (h(\"div\", { class: \"picker-col-item\", \"data-value\": year, onClick: (ev) => this.centerPickerItemInView(ev.target, this.yearRef) }, year));\n    }), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-col-item picker-col-item-empty\" }, \"\\u00A0\")))));\n  }\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), \" \", h(\"ion-icon\", { icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { onClick: () => this.prevMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronBack, lazy: false })), h(\"ion-button\", { onClick: () => this.nextMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronForward, lazy: false }))))), h(\"div\", { class: \"calendar-days-of-week\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(d => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isMonthDisabled = !yearAllowed || !monthAllowed;\n    return (h(\"div\", { class: \"calendar-month\" }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const referenceParts = { month, day, year };\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isMonthDisabled || disabled, class: {\n          'calendar-day-padding': day === null,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday\n        }, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (day === null) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year }));\n        } }, day));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: el => this.calendarBodyRef = el, tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return (h(\"slot\", { name: \"time-label\" }, \"Time\"));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime(mode) {\n    const { hourCycle } = this;\n    const use24Hour = is24Hour(this.locale, hourCycle);\n    const { ampm } = this.workingParts;\n    const { hours, minutes, am, pm } = generateTime(this.workingParts, use24Hour ? 'h23' : 'h12', this.minParts, this.maxParts, this.parsedHourValues, this.parsedMinuteValues);\n    return (h(\"div\", { class: \"datetime-time\" }, h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()), h(\"div\", { class: \"time-body\" }, h(\"div\", { class: \"time-base\", ref: el => this.timeBaseRef = el }, h(\"div\", { class: \"time-wrapper\" }, h(\"div\", { class: \"ion-focusable time-column time-column-hours\", \"aria-label\": \"Hours\", role: \"slider\", ref: el => this.timeHourRef = el, tabindex: \"0\" }, hours.map(hour => {\n      return (h(\"div\", { class: \"time-item\", \"data-value\": getInternalHourValue(hour, use24Hour, ampm) }, getFormattedHour(hour, use24Hour)));\n    })), h(\"div\", { class: \"time-separator\" }, \":\"), h(\"div\", { class: \"ion-focusable time-column time-column-minutes\", \"aria-label\": \"Minutes\", role: \"slider\", ref: el => this.timeMinuteRef = el, tabindex: \"0\" }, minutes.map(minute => {\n      return (h(\"div\", { class: \"time-item\", \"data-value\": minute }, addTimePadding(minute)));\n    })))), !use24Hour && h(\"div\", { class: \"time-ampm\" }, h(\"ion-segment\", { color: mode === 'md' ? this.color : undefined, value: this.workingParts.ampm, onIonChange: (ev) => {\n        /**\n         * Since datetime uses 24-hour time internally\n         * we need to update the working hour here as well\n         * if the user is using a 12-hour time format.\n         */\n        const { value } = ev.detail;\n        const hour = calculateHourFromAMPM(this.workingParts, value);\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { ampm: value, hour }));\n        /**\n         * Do not let this event bubble up\n         * otherwise developers listening for ionChange\n         * on the datetime will see this event.\n         */\n        ev.stopPropagation();\n      } }, h(\"ion-segment-button\", { disabled: !am, value: \"am\" }, \"AM\"), h(\"ion-segment-button\", { disabled: !pm, value: \"pm\" }, \"PM\"))))));\n  }\n  renderCalendarViewHeader(mode) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), mode === 'md' && h(\"div\", { class: \"datetime-selected-date\" }, getMonthAndDay(this.locale, this.activeParts))));\n  }\n  renderDatetime(mode) {\n    const { presentation } = this;\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderTime(mode),\n          this.renderFooter()\n        ];\n      case 'time-date':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderTime(mode),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderFooter()\n        ];\n      case 'time':\n        return [\n          this.renderTime(mode),\n          this.renderFooter()\n        ];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [\n          this.renderYearView(),\n          this.renderFooter()\n        ];\n      default:\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderFooter()\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, presentation, size } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    renderHiddenInput(true, el, name, value, disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet datetimeIds = 0;\nconst PICKER_COL_ACTIVE = 'picker-col-item-active';\nDatetime.style = {\n  ios: datetimeIosCss,\n  md: datetimeMdCss\n};\n\n/**\n * iOS Picker Enter Animation\n */\nconst iosEnterAnimation = (baseEl) => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation\n    .addElement(baseEl.querySelector('ion-backdrop'))\n    .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n    .beforeStyles({\n    'pointer-events': 'none'\n  })\n    .afterClearStyles(['pointer-events']);\n  wrapperAnimation\n    .addElement(baseEl.querySelector('.picker-wrapper'))\n    .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n  return baseAnimation\n    .addElement(baseEl)\n    .easing('cubic-bezier(.36,.66,.04,1)')\n    .duration(400)\n    .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * iOS Picker Leave Animation\n */\nconst iosLeaveAnimation = (baseEl) => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation\n    .addElement(baseEl.querySelector('ion-backdrop'))\n    .fromTo('opacity', 'var(--backdrop-opacity)', 0.01);\n  wrapperAnimation\n    .addElement(baseEl.querySelector('.picker-wrapper'))\n    .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n  return baseAnimation\n    .addElement(baseEl)\n    .easing('cubic-bezier(.36,.66,.04,1)')\n    .duration(400)\n    .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst pickerIosCss = \".sc-ion-picker-ios-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-ios-h,[dir=rtl] .sc-ion-picker-ios-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-ios-h{display:none}.picker-wrapper.sc-ion-picker-ios{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-wrapper.sc-ion-picker-ios{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-ios{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-ios{border:0;font-family:inherit}.picker-button.sc-ion-picker-ios:active,.picker-button.sc-ion-picker-ios:focus{outline:none}.picker-columns.sc-ion-picker-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-ios,.picker-below-highlight.sc-ion-picker-ios{display:none;pointer-events:none}.sc-ion-picker-ios-h{--background:var(--ion-background-color, #fff);--border-width:1px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-ios{display:-ms-flexbox;display:flex;height:44px;border-bottom:0.55px solid var(--border-color)}.picker-toolbar-button.sc-ion-picker-ios{-ms-flex:1;flex:1;text-align:end}.picker-toolbar-button.sc-ion-picker-ios:last-child .picker-button.sc-ion-picker-ios{font-weight:600}.picker-toolbar-button.sc-ion-picker-ios:first-child{font-weight:normal;text-align:start}.picker-button.sc-ion-picker-ios,.picker-button.ion-activated.sc-ion-picker-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1em;padding-right:1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-button.sc-ion-picker-ios,.picker-button.ion-activated.sc-ion-picker-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:1em;padding-inline-start:1em;-webkit-padding-end:1em;padding-inline-end:1em}}.picker-columns.sc-ion-picker-ios{height:215px;-webkit-perspective:1000px;perspective:1000px}.picker-above-highlight.sc-ion-picker-ios{left:0;top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:81px;border-bottom:1px solid var(--border-color);background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:10}[dir=rtl].sc-ion-picker-ios .picker-above-highlight.sc-ion-picker-ios,[dir=rtl].sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-ios{left:0;top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:119px;border-top:1px solid var(--border-color);background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:11}[dir=rtl].sc-ion-picker-ios .picker-below-highlight.sc-ion-picker-ios,[dir=rtl].sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}\";\n\nconst pickerMdCss = \".sc-ion-picker-md-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-md-h,[dir=rtl] .sc-ion-picker-md-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-md-h{display:none}.picker-wrapper.sc-ion-picker-md{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-wrapper.sc-ion-picker-md{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-md{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-md{border:0;font-family:inherit}.picker-button.sc-ion-picker-md:active,.picker-button.sc-ion-picker-md:focus{outline:none}.picker-columns.sc-ion-picker-md{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-md,.picker-below-highlight.sc-ion-picker-md{display:none;pointer-events:none}.sc-ion-picker-md-h{--background:var(--ion-background-color, #fff);--border-width:0.55px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-md{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;height:44px}.picker-button.sc-ion-picker-md,.picker-button.ion-activated.sc-ion-picker-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1.1em;padding-right:1.1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:14px;font-weight:500;text-transform:uppercase;-webkit-box-shadow:none;box-shadow:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-button.sc-ion-picker-md,.picker-button.ion-activated.sc-ion-picker-md{padding-left:unset;padding-right:unset;-webkit-padding-start:1.1em;padding-inline-start:1.1em;-webkit-padding-end:1.1em;padding-inline-end:1.1em}}.picker-columns.sc-ion-picker-md{height:216px;-webkit-perspective:1800px;perspective:1800px}.picker-above-highlight.sc-ion-picker-md{left:0;top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:81px;border-bottom:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to bottom, var(--ion-background-color, #fff) 20%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:10}[dir=rtl].sc-ion-picker-md .picker-above-highlight.sc-ion-picker-md,[dir=rtl].sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-md{left:0;top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:119px;border-top:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to top, var(--ion-background-color, #fff) 30%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:11}[dir=rtl].sc-ion-picker-md .picker-below-highlight.sc-ion-picker-md,[dir=rtl].sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}\";\n\nconst Picker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.didPresent = createEvent(this, \"ionPickerDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionPickerWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionPickerWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionPickerDidDismiss\", 7);\n    this.presented = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n    this.keyboardClose = true;\n    /**\n     * Array of buttons to be displayed at the top of the picker.\n     */\n    this.buttons = [];\n    /**\n     * Array of columns to be displayed in the picker.\n     */\n    this.columns = [];\n    /**\n     * Number of milliseconds to wait before dismissing the picker.\n     */\n    this.duration = 0;\n    /**\n     * If `true`, a backdrop will be displayed behind the picker.\n     */\n    this.showBackdrop = true;\n    /**\n     * If `true`, the picker will be dismissed when the backdrop is clicked.\n     */\n    this.backdropDismiss = true;\n    /**\n     * If `true`, the picker will animate.\n     */\n    this.animated = true;\n    this.onBackdropTap = () => {\n      this.dismiss(undefined, BACKDROP);\n    };\n    this.dispatchCancelHandler = (ev) => {\n      const role = ev.detail.role;\n      if (isCancel(role)) {\n        const cancelButton = this.buttons.find(b => b.role === 'cancel');\n        this.callButtonHandler(cancelButton);\n      }\n    };\n  }\n  connectedCallback() {\n    prepareOverlay(this.el);\n  }\n  /**\n   * Present the picker overlay after it has been created.\n   */\n  async present() {\n    await present(this, 'pickerEnter', iosEnterAnimation, iosEnterAnimation, undefined);\n    if (this.duration > 0) {\n      this.durationTimeout = setTimeout(() => this.dismiss(), this.duration);\n    }\n  }\n  /**\n   * Dismiss the picker overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the picker.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the picker.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   */\n  dismiss(data, role) {\n    if (this.durationTimeout) {\n      clearTimeout(this.durationTimeout);\n    }\n    return dismiss(this, data, role, 'pickerLeave', iosLeaveAnimation, iosLeaveAnimation);\n  }\n  /**\n   * Returns a promise that resolves when the picker did dismiss.\n   */\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionPickerDidDismiss');\n  }\n  /**\n   * Returns a promise that resolves when the picker will dismiss.\n   */\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionPickerWillDismiss');\n  }\n  /**\n   * Get the column that matches the specified name.\n   *\n   * @param name The name of the column.\n   */\n  getColumn(name) {\n    return Promise.resolve(this.columns.find(column => column.name === name));\n  }\n  async buttonClick(button) {\n    const role = button.role;\n    if (isCancel(role)) {\n      return this.dismiss(undefined, role);\n    }\n    const shouldDismiss = await this.callButtonHandler(button);\n    if (shouldDismiss) {\n      return this.dismiss(this.getSelected(), button.role);\n    }\n    return Promise.resolve();\n  }\n  async callButtonHandler(button) {\n    if (button) {\n      // a handler has been provided, execute it\n      // pass the handler the values from the inputs\n      const rtn = await safeCall(button.handler, this.getSelected());\n      if (rtn === false) {\n        // if the return value of the handler is false then do not dismiss\n        return false;\n      }\n    }\n    return true;\n  }\n  getSelected() {\n    const selected = {};\n    this.columns.forEach((col, index) => {\n      const selectedColumn = col.selectedIndex !== undefined\n        ? col.options[col.selectedIndex]\n        : undefined;\n      selected[col.name] = {\n        text: selectedColumn ? selectedColumn.text : undefined,\n        value: selectedColumn ? selectedColumn.value : undefined,\n        columnIndex: index\n      };\n    });\n    return selected;\n  }\n  render() {\n    const { htmlAttributes } = this;\n    const mode = getIonMode(this);\n    return (h(Host, Object.assign({ \"aria-modal\": \"true\", tabindex: \"-1\" }, htmlAttributes, { style: {\n        zIndex: `${20000 + this.overlayIndex}`\n      }, class: Object.assign({ [mode]: true,\n        // Used internally for styling\n        [`picker-${mode}`]: true }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonPickerWillDismiss: this.dispatchCancelHandler }), h(\"ion-backdrop\", { visible: this.showBackdrop, tappable: this.backdropDismiss }), h(\"div\", { tabindex: \"0\" }), h(\"div\", { class: \"picker-wrapper ion-overlay-wrapper\", role: \"dialog\" }, h(\"div\", { class: \"picker-toolbar\" }, this.buttons.map(b => (h(\"div\", { class: buttonWrapperClass(b) }, h(\"button\", { type: \"button\", onClick: () => this.buttonClick(b), class: buttonClass(b) }, b.text))))), h(\"div\", { class: \"picker-columns\" }, h(\"div\", { class: \"picker-above-highlight\" }), this.presented && this.columns.map(c => h(\"ion-picker-column\", { col: c })), h(\"div\", { class: \"picker-below-highlight\" }))), h(\"div\", { tabindex: \"0\" })));\n  }\n  get el() { return getElement(this); }\n};\nconst buttonWrapperClass = (button) => {\n  return {\n    [`picker-toolbar-${button.role}`]: button.role !== undefined,\n    'picker-toolbar-button': true\n  };\n};\nconst buttonClass = (button) => {\n  return Object.assign({ 'picker-button': true, 'ion-activatable': true }, getClassMap(button.cssClass));\n};\nPicker.style = {\n  ios: pickerIosCss,\n  md: pickerMdCss\n};\n\nconst pickerColumnIosCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{padding-left:4px;padding-right:4px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:20px;line-height:42px;pointer-events:none}.picker-opt{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-transform-origin:center center;transform-origin:center center;height:46px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:20px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}\";\n\nconst pickerColumnMdCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:22px;line-height:42px;pointer-events:none}.picker-opt{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;height:43px;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:22px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}.picker-prefix,.picker-suffix,.picker-opt.picker-opt-selected{color:var(--ion-color-primary, #3880ff)}\";\n\nconst PickerColumnCmp = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionPickerColChange = createEvent(this, \"ionPickerColChange\", 7);\n    this.optHeight = 0;\n    this.rotateFactor = 0;\n    this.scaleFactor = 1;\n    this.velocity = 0;\n    this.y = 0;\n    this.noAnimate = true;\n  }\n  colChanged() {\n    this.refresh();\n  }\n  async connectedCallback() {\n    let pickerRotateFactor = 0;\n    let pickerScaleFactor = 0.81;\n    const mode = getIonMode(this);\n    if (mode === 'ios') {\n      pickerRotateFactor = -0.46;\n      pickerScaleFactor = 1;\n    }\n    this.rotateFactor = pickerRotateFactor;\n    this.scaleFactor = pickerScaleFactor;\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\n      el: this.el,\n      gestureName: 'picker-swipe',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.gesture.enable();\n    this.tmrId = setTimeout(() => {\n      this.noAnimate = false;\n      this.refresh(true);\n    }, 250);\n  }\n  componentDidLoad() {\n    const colEl = this.optsEl;\n    if (colEl) {\n      // DOM READ\n      // We perfom a DOM read over a rendered item, this needs to happen after the first render\n      this.optHeight = (colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0);\n    }\n    this.refresh();\n  }\n  disconnectedCallback() {\n    cancelAnimationFrame(this.rafId);\n    clearTimeout(this.tmrId);\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  emitColChange() {\n    this.ionPickerColChange.emit(this.col);\n  }\n  setSelected(selectedIndex, duration) {\n    // if there is a selected index, then figure out it's y position\n    // if there isn't a selected index, then just use the top y position\n    const y = (selectedIndex > -1) ? -(selectedIndex * this.optHeight) : 0;\n    this.velocity = 0;\n    // set what y position we're at\n    cancelAnimationFrame(this.rafId);\n    this.update(y, duration, true);\n    this.emitColChange();\n  }\n  update(y, duration, saveY) {\n    if (!this.optsEl) {\n      return;\n    }\n    // ensure we've got a good round number :)\n    let translateY = 0;\n    let translateZ = 0;\n    const { col, rotateFactor } = this;\n    const selectedIndex = col.selectedIndex = this.indexForY(-y);\n    const durationStr = (duration === 0) ? '' : duration + 'ms';\n    const scaleStr = `scale(${this.scaleFactor})`;\n    const children = this.optsEl.children;\n    for (let i = 0; i < children.length; i++) {\n      const button = children[i];\n      const opt = col.options[i];\n      const optOffset = (i * this.optHeight) + y;\n      let transform = '';\n      if (rotateFactor !== 0) {\n        const rotateX = optOffset * rotateFactor;\n        if (Math.abs(rotateX) <= 90) {\n          translateY = 0;\n          translateZ = 90;\n          transform = `rotateX(${rotateX}deg) `;\n        }\n        else {\n          translateY = -9999;\n        }\n      }\n      else {\n        translateZ = 0;\n        translateY = optOffset;\n      }\n      const selected = selectedIndex === i;\n      transform += `translate3d(0px,${translateY}px,${translateZ}px) `;\n      if (this.scaleFactor !== 1 && !selected) {\n        transform += scaleStr;\n      }\n      // Update transition duration\n      if (this.noAnimate) {\n        opt.duration = 0;\n        button.style.transitionDuration = '';\n      }\n      else if (duration !== opt.duration) {\n        opt.duration = duration;\n        button.style.transitionDuration = durationStr;\n      }\n      // Update transform\n      if (transform !== opt.transform) {\n        opt.transform = transform;\n        button.style.transform = transform;\n      }\n      // Update selected item\n      if (selected !== opt.selected) {\n        opt.selected = selected;\n        if (selected) {\n          button.classList.add(PICKER_OPT_SELECTED);\n        }\n        else {\n          button.classList.remove(PICKER_OPT_SELECTED);\n        }\n      }\n    }\n    this.col.prevSelected = selectedIndex;\n    if (saveY) {\n      this.y = y;\n    }\n    if (this.lastIndex !== selectedIndex) {\n      // have not set a last index yet\n      hapticSelectionChanged();\n      this.lastIndex = selectedIndex;\n    }\n  }\n  decelerate() {\n    if (this.velocity !== 0) {\n      // still decelerating\n      this.velocity *= DECELERATION_FRICTION;\n      // do not let it go slower than a velocity of 1\n      this.velocity = (this.velocity > 0)\n        ? Math.max(this.velocity, 1)\n        : Math.min(this.velocity, -1);\n      let y = this.y + this.velocity;\n      if (y > this.minY) {\n        // whoops, it's trying to scroll up farther than the options we have!\n        y = this.minY;\n        this.velocity = 0;\n      }\n      else if (y < this.maxY) {\n        // gahh, it's trying to scroll down farther than we can!\n        y = this.maxY;\n        this.velocity = 0;\n      }\n      this.update(y, 0, true);\n      const notLockedIn = (Math.round(y) % this.optHeight !== 0) || (Math.abs(this.velocity) > 1);\n      if (notLockedIn) {\n        // isn't locked in yet, keep decelerating until it is\n        this.rafId = requestAnimationFrame(() => this.decelerate());\n      }\n      else {\n        this.velocity = 0;\n        this.emitColChange();\n        hapticSelectionEnd();\n      }\n    }\n    else if (this.y % this.optHeight !== 0) {\n      // needs to still get locked into a position so options line up\n      const currentPos = Math.abs(this.y % this.optHeight);\n      // create a velocity in the direction it needs to scroll\n      this.velocity = (currentPos > (this.optHeight / 2) ? 1 : -1);\n      this.decelerate();\n    }\n  }\n  indexForY(y) {\n    return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);\n  }\n  // TODO should this check disabled?\n  onStart(detail) {\n    // We have to prevent default in order to block scrolling under the picker\n    // but we DO NOT have to stop propagation, since we still want\n    // some \"click\" events to capture\n    if (detail.event.cancelable) {\n      detail.event.preventDefault();\n    }\n    detail.event.stopPropagation();\n    hapticSelectionStart();\n    // reset everything\n    cancelAnimationFrame(this.rafId);\n    const options = this.col.options;\n    let minY = (options.length - 1);\n    let maxY = 0;\n    for (let i = 0; i < options.length; i++) {\n      if (!options[i].disabled) {\n        minY = Math.min(minY, i);\n        maxY = Math.max(maxY, i);\n      }\n    }\n    this.minY = -(minY * this.optHeight);\n    this.maxY = -(maxY * this.optHeight);\n  }\n  onMove(detail) {\n    if (detail.event.cancelable) {\n      detail.event.preventDefault();\n    }\n    detail.event.stopPropagation();\n    // update the scroll position relative to pointer start position\n    let y = this.y + detail.deltaY;\n    if (y > this.minY) {\n      // scrolling up higher than scroll area\n      y = Math.pow(y, 0.8);\n      this.bounceFrom = y;\n    }\n    else if (y < this.maxY) {\n      // scrolling down below scroll area\n      y += Math.pow(this.maxY - y, 0.9);\n      this.bounceFrom = y;\n    }\n    else {\n      this.bounceFrom = 0;\n    }\n    this.update(y, 0, false);\n  }\n  onEnd(detail) {\n    if (this.bounceFrom > 0) {\n      // bounce back up\n      this.update(this.minY, 100, true);\n      this.emitColChange();\n      return;\n    }\n    else if (this.bounceFrom < 0) {\n      // bounce back down\n      this.update(this.maxY, 100, true);\n      this.emitColChange();\n      return;\n    }\n    this.velocity = clamp(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);\n    if (this.velocity === 0 && detail.deltaY === 0) {\n      const opt = detail.event.target.closest('.picker-opt');\n      if (opt && opt.hasAttribute('opt-index')) {\n        this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);\n      }\n    }\n    else {\n      this.y += detail.deltaY;\n      if (Math.abs(detail.velocityY) < 0.05) {\n        const isScrollingUp = detail.deltaY > 0;\n        const optHeightFraction = (Math.abs(this.y) % this.optHeight) / this.optHeight;\n        if (isScrollingUp && optHeightFraction > 0.5) {\n          this.velocity = Math.abs(this.velocity) * -1;\n        }\n        else if (!isScrollingUp && optHeightFraction <= 0.5) {\n          this.velocity = Math.abs(this.velocity);\n        }\n      }\n      this.decelerate();\n    }\n  }\n  refresh(forceRefresh) {\n    let min = this.col.options.length - 1;\n    let max = 0;\n    const options = this.col.options;\n    for (let i = 0; i < options.length; i++) {\n      if (!options[i].disabled) {\n        min = Math.min(min, i);\n        max = Math.max(max, i);\n      }\n    }\n    /**\n     * Only update selected value if column has a\n     * velocity of 0. If it does not, then the\n     * column is animating might land on\n     * a value different than the value at\n     * selectedIndex\n     */\n    if (this.velocity !== 0) {\n      return;\n    }\n    const selectedIndex = clamp(min, this.col.selectedIndex || 0, max);\n    if (this.col.prevSelected !== selectedIndex || forceRefresh) {\n      const y = (selectedIndex * this.optHeight) * -1;\n      this.velocity = 0;\n      this.update(y, TRANSITION_DURATION, true);\n    }\n  }\n  render() {\n    const col = this.col;\n    const Button = 'button';\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'picker-col': true,\n        'picker-opts-left': this.col.align === 'left',\n        'picker-opts-right': this.col.align === 'right'\n      }, style: {\n        'max-width': this.col.columnWidth\n      } }, col.prefix && (h(\"div\", { class: \"picker-prefix\", style: { width: col.prefixWidth } }, col.prefix)), h(\"div\", { class: \"picker-opts\", style: { maxWidth: col.optionsWidth }, ref: el => this.optsEl = el }, col.options.map((o, index) => h(Button, { type: \"button\", class: { 'picker-opt': true, 'picker-opt-disabled': !!o.disabled }, \"opt-index\": index }, o.text))), col.suffix && (h(\"div\", { class: \"picker-suffix\", style: { width: col.suffixWidth } }, col.suffix))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"col\": [\"colChanged\"]\n  }; }\n};\nconst PICKER_OPT_SELECTED = 'picker-opt-selected';\nconst DECELERATION_FRICTION = 0.97;\nconst MAX_PICKER_SPEED = 90;\nconst TRANSITION_DURATION = 150;\nPickerColumnCmp.style = {\n  ios: pickerColumnIosCss,\n  md: pickerColumnMdCss\n};\n\nexport { Datetime as ion_datetime, Picker as ion_picker, PickerColumnCmp as ion_picker_column };\n"],"sourceRoot":"webpack:///"}